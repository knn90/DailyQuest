// Mocks generated by Mockito 5.4.2 from annotations
// in daily_quest/test/daily_quest/data/repository/daily_quest_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:daily_quest/daily_quest/data/datasource/daily_quest_local_datasource.dart'
    as _i3;
import 'package:daily_quest/daily_quest/data/model/local_daily_quest.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocalDailyQuest_0 extends _i1.SmartFake
    implements _i2.LocalDailyQuest {
  _FakeLocalDailyQuest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DailyQuestLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDailyQuestLocalDataSource extends _i1.Mock
    implements _i3.DailyQuestLocalDataSource {
  @override
  _i2.LocalDailyQuest getLast() => (super.noSuchMethod(
        Invocation.method(
          #getLast,
          [],
        ),
        returnValue: _FakeLocalDailyQuest_0(
          this,
          Invocation.method(
            #getLast,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeLocalDailyQuest_0(
          this,
          Invocation.method(
            #getLast,
            [],
          ),
        ),
      ) as _i2.LocalDailyQuest);
  @override
  _i4.Future<void> insert({required _i2.LocalDailyQuest? quest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [],
          {#quest: quest},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> update({required _i2.LocalDailyQuest? quest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [],
          {#quest: quest},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
